# https://dzone.com/articles/monitoring-docker-swarm
version: "3.8"

services:
  prometheus:
    image: prom/prometheus
    # volumes:
    #   - $PWD/management/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml
    # ports:
    #   - 9090:9090
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.swarm.makarewicz.eu`)"
        - "traefik.http.routers.prometheus.tls.certresolver=le"
        - "traefik.http.services.prometheus.loadbalancer.passhostheader=true"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
        - "traefik.docker.network=swarm_default"
    networks:
      - frontend
      - backend

  node-exporter:
    image: prom/node-exporter
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/host"
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    networks:
      - backend

  cadvisor:
    image: google/cadvisor
    networks:
      - backend
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: grafana/grafana
    volumes:
      - grafana-data:/var/lib/grafana
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.http.routers.grafana.rule=Host(`grafana.swarm.makarewicz.eu`)"
        - "traefik.http.routers.grafana.tls.certresolver=le"
        - "traefik.http.services.grafana.loadbalancer.passhostheader=true"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
        - "traefik.docker.network=swarm_default"
    # ports:
    #   - 3000:3000
    networks:
      - frontend
      - backend

configs:
  prometheus-config:
    file: $PWD/management/monitoring/prometheus.yml
  node_rules:
    file: $PWD/management/monitoring/rules/swarm_node.rules.yml
  task_rules:
    file: $PWD/management/monitoring/rules/swarm_task.rules.yml

networks:
  backend:
    driver: overlay
  frontend:
    external: true
    name: swarm_default

volumes:
  grafana-data:
