# https://hackernoon.com/monitor-swarm-cluster-with-tick-stack-slack-3aaa6483d44a
version: "3.8"

services:
  telegraf:
    image: telegraf:1.3
    networks:
      - tick-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: telegraf-config
        target: /etc/telegraf/telegraf.conf
    deploy:
      restart_policy:
        condition: on-failure
      mode: global

  influxdb:
    image: influxdb:1.2
    networks:
      - tick-net
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker

  chronograf:
    image: chronograf:1.3
    networks:
      - tick-net
      - frontend
    # ports:
    #   - 8888:8888
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.http.routers.chronograf.rule=Host(`chronograf.swarm.makarewicz.eu`)"
        - "traefik.http.routers.chronograf.tls.certresolver=le"
        - "traefik.http.services.chronograf.loadbalancer.passhostheader=true"
        - "traefik.http.services.chronograf.loadbalancer.server.port=8888"
        - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
        - "traefik.docker.network=swarm_default"

  kapacitor:
    image: kapacitor:1.2
    networks:
      - tick-net
    configs:
      - source: kapacitor-config
        target: /etc/kapacitor/kapacitor.conf
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker

configs:
  telegraf-config:
    file: $PWD/tick/conf/telegraf/telegraf.conf
  kapacitor-config:
    file: $PWD/tick/conf/kapacitor/kapacitor.conf

networks:
  tick-net:
    driver: overlay
  frontend:
    external: true
    name: swarm_default
